[package]
name = "hypercore"
version = "0.12.0-alpha.7"
license = "MIT OR Apache-2.0"
description = "Secure, distributed, append-only log"
documentation = "https://docs.rs/hypercore"
repository = "https://github.com/datrs/hypercore"
readme = "README.md"
authors = ["Yoshua Wuyts <yoshuawuyts@gmail.com>"]
keywords = ["dat", "p2p", "stream", "feed", "merkle"]
categories = [
  "asynchronous",
  "concurrency",
  "cryptography",
  "data-structures",
  "encoding",
]
edition = "2018"

[dependencies]
blake2 = "0.10.6"
byteorder = "1.3.4"
ed25519-dalek = { version = "2.0.0", features = ["rand_core"] }
thiserror = "1"
tracing = "0.1"
compact-encoding = "1"
flat-tree = "6.0.0"
lazy_static = "1.4.0"
memory-pager = "0.9.0"
merkle-tree-stream =  "0.12.0"
pretty-hash = "0.4.1"
rand = "0.8"
random-access-memory = "3.0.0"
random-access-storage = "5.0.0"
sha2 = "0.9.2"
sleep-parser = "0.8.0"
sparse-bitfield = "0.11.0"
tree-index = "0.6.0"
bitfield-rle = "0.2.0"
futures = "0.3.4"
crc32fast = "1.3.2"
intmap = "2.0.0"
moka = { version = "0.10.0", optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
random-access-disk = { version = "3.0.0", default-features = false }

[dev-dependencies]
anyhow = "1.0.70"
proptest = "1.1.0"
proptest-derive = "0.2.0"
data-encoding = "2.2.0"
remove_dir_all = "0.7.0"
tempfile = "3.1.0"
async-std = { version = "1.12.0", features = ["attributes"] }
tokio = { version = "1.27.0", default-features = false, features = ["macros", "rt", "rt-multi-thread"] }
sha2 = "0.10.2"
criterion = { version = "0.4", features = ["async_std", "async_tokio"] }
test-log = { version = "0.2.11", default-features = false, features = ["trace"] }
tracing-subscriber = { version = "0.3.16", features = ["env-filter", "fmt"] }

[features]
default = ["async-std", "sparse"]
sparse = ["random-access-disk/sparse"]
tokio = ["random-access-disk/tokio"]
async-std = ["random-access-disk/async-std"]
cache = ["moka"]
# Used only in interoperability tests under tests/js-interop which use the javascript version of hypercore
# to verify that this crate works. To run them, use:
# cargo test --features js-interop-tests
js_interop_tests = []

[[bench]]
name = "memory"
harness = false

[[bench]]
name = "disk"
harness = false
